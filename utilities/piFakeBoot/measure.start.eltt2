#!/bin/bash

######################################################################
#
# Variables and Fixed Things
#
# We set the log file and the locations of the various commands required
# to get this working
#
# The log file is stored in /var/log as per other Unix/Linux things
#
# TPM2_TOOLS availability is assumed, ie: tpm2_pcrextent and tpm2_pcrread
# Other tools include the sha1sum and sha256sum files and also awk
#
######################################################################

#Configuration variables for this script
LOG=/var/log/measuredBootLog
MEASURE_START_SCRIPT=/boot/measuredboot/measure.start
MEASURE_STOP_SCRIPT=/boot/measuredboot/measure.stop
SYSTEMD_START=/etc/systemd/system/measure.service
MEASURES1DIR=/boot/measuredboot/measures1.d
MEASURES256DIR=/boot/measuredboot/measures256.d

#Required Linux/Unix tools
SHA1SUM=/usr/bin/sha1sum
SHA256SUM=/usr/bin/sha256sum
TOUCH=/usr/bin/touch
AWK=/usr/bin/awk
BASH=/bin/bash

#Required TPM2_TOOLS
TPM2_PCREXTEND=/usr/bin/eltt2
TPM2_PCRREAD=/usr/bin/eltt2



######################################################################
#
# Functions and Procedures
#
######################################################################

### HAE1 and HAE2
###
### hash and extend functions for SHA1 and SHA256 PCR registers respectively
###
### First parameter is the name of the file to hash and second parameter is the PCR entry
###
### Note the $1 passed to awk is an awk variable, not the function parameter!

function hae1 () {
   SHA1=`$SHA1SUM $1 | $AWK '{ print $1 }'`   
   $TPM2_PCREXTEND -e $2:sha1=$SHA1   
   echo $1 $2 $SHA1 >> $LOG
}

function hae256 () {   
   SHA256=`$SHA256SUM $1 | $AWK '{ print $1 }'`  
   $TPM2_PCREXTEND -E $2:sha256=$SHA256
   echo $1 $2 $SHA256 >> $LOG
}


######################################################################
#
# The measurement process starts here
#
# The numbering of comments starts at 100 (and generally increments by 100)
# unless new procedures are added :-)
#
######################################################################

#Firstly, clear the TPM
echo "000 = CLEAR TPM =======================================================" >> $LOG
gpio mode 5 out  >> $LOG
gpio write 5 1 >> $LOG
gpio write 5 0 >> $LOG
sleep 1  >> $LOG
gpio write 5 1  >> $LOG
tpm2_startup -c  >> $LOG

#Generate LOG Header
echo "100 = START ===========================================================" >> $LOG
echo "Measured Boot Start" >> $LOG
$TOUCH $LOG
date >> $LOG

#List PCRS before 
echo "200 = PREMEASUREMENT ===========================================================" >> $LOG
echo "Premeasurement PCRs" >> $LOG
tpm2_pcrread >> $LOG

#Generate CRTM by hashing all the tools and the script
echo "300 = CRTM ===========================================================" >> $LOG
echo "CRTM " >> $LOG

hae1 $MEASURE_START_SCRIPT 0 
hae1 $MEASURE_STOP_SCRIPT 0 
hae1 $SYSTEMD_START 0
hae1 $SHA1SUM 0 
hae1 $SHA256SUM 0 
hae1 $TOUCH 0
hae1 $AWK 0
hae1 $TPM2_PCREXTEND 0
hae1 $TPM2_PCRREAD 0
hae1 $BASH 0

hae256 $MEASURE_START_SCRIPT 0 
hae256 $MEASURE_STOP_SCRIPT 0 
hae256 $SYSTEMD_START 0
hae256 $SHA1SUM 0 
hae256 $SHA256SUM 0 
hae256 $TOUCH 0
hae256 $AWK 0
hae256 $TPM2_PCREXTEND 0
hae256 $TPM2_PCRREAD 0
hae256 $BASH 0

#Generate SRTM by hashing all the files listed in the measured.d directory
echo "400 = SHA1 ===========================================================" >> $LOG
echo "SRTM SHA1" >> $LOG

for MFILE in $MEASURES1DIR/*
do
    echo "Measuring into PCR " ${MFILE##*/} >> $LOG
    
    while read LINE; do   
        hae1 $LINE ${MFILE##*/}
    done < $MFILE
done

echo "450 = SHA256 ===========================================================" >> $LOG
echo "SRTM SHA256" >> $LOG

for MFILE in $MEASURES256DIR/*
do
    echo "Measuring into PCR " ${MFILE##*/} >> $LOG
    
    while read LINE; do   
        hae256 $LINE ${MFILE##*/}
    done < $MFILE
done



#List PCRS after
echo "800 = POSTMEASUREMENT ===========================================================" >> $LOG
echo "Postmeasurement PCRs" >> $LOG
tpm2_pcrread >> $LOG

echo "999 = COMPLETE ===========================================================" >> $LOG
echo "Measuring Complete" >> $LOG
date >> $LOG
echo "============================================================" >> $LOG


exit 0
