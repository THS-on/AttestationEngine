# Copyright 2021 Nokia
# Licensed under the BSD 3-Clause License.
# SPDX-License-Identifier: BSD-3-Clause

version: "3"

#
# docker-compoes file to bring up the whole attestation engine
#
# Take note of lines that need to be edited, marked with #!!!
#
# Defacto ports for A10
#  8540 - U10
#  8542 - FC10
#  8560 - MQTT Channels
#  8561 - MQTT Channels (SSH)
#  8520 - A10REST
#  8530 - trust agents (on elements to be attested)     # Does not run here - not part of the server
#  8555 - mongo-express
#
# Configuration files
#  Edit the source of the a10.conf file
#  Should be the same for both u10 and a10rest
#

#
# The services needed to run the system
#

services:

#
# The reverse proxy
#  
   reverse-proxy:
     image: traefik:v2.9
     command:
       - "--log.level=DEBUG"
       - "--api.insecure=true"
       - "--providers.docker=true"
       - "--providers.docker.exposedByDefault=true"
       - "--entrypoints.web.address=:80"
       - "--accesslog=true"
     ports:
       - "80:80"
       - "8080:8080"
     volumes:
       - /var/run/docker.sock:/var/run/docker.sock

#
# The core database
#  
   database:
     image: "mongo"
     container_name: mongo
     volumes:
      - attestationdata:/data/db
     networks:
      - attestationnetwork

#
# Useful tool for examining the database instead of using the mongo shell
#
# Mongoexpress listens normally on port 8081, we expose this on 8555
#
   databaseui:
     image: "mongo-express"
     ports: 
       - 8555:8081                          # !!!
     networks:
      - attestationnetwork
     environment:
      - ME_CONFIG_MONGODB_SERVER=database
      - ME_CONFIG_MONGODB_URL="mongodb://database:27017"
     restart: always
     depends_on: 
      - database
#
# Mosquitto for the MQTT channels
#
   messagebus:
     image: "eclipse-mosquitto"
     container_name: messagebus
     ports:
       - 8560:1883                          # !!!
       - 8561:9000                          # !!!
     networks:
      - attestationnetwork
     volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /mosquitto/data
      - /mosquitto/log

#
# U10 - the basic UI to the attestation database and engine
#    
   u10:
     image: "u10"
#     container_name: u10     
#     ports:
#       - 8540:8540                           # !!!
     depends_on:
       - messagebus
     restart: always
     networks:
      - attestationnetwork
     volumes:
      - ./a10.conf:/etc/a10.conf      # !!!
     labels:
       - "traefik.enable=true"
 #      - "traefik.port=8540"
       - "traefik.docker.network=attestationnetwork"
       - "traefik.http.routers.u10.rule=PathPrefix(`/u10`)"
       - "traefik.http.routers.u10.entrypoints=web"
       - "traefik.http.routers.u10.middlewares=u10"
       - "traefik.http.middlewares.u10.stripprefix.prefixes=/u10" 
       - "traefik.http.middlewares.u10.stripprefix.forceSlash=false"
       - "traefik.http.routers.u10.service=u10"       
       - "traefik.http.services.u10.loadbalancer.server.port=8540"

#
# A10REST - the REST API to the attestation engine
#       
   a10rest:
    image: "a10rest"
#    container_name: a10rest    
#    ports:
#      - 8520:8520                                # !!!
    depends_on:
      - messagebus  
    restart: always
    networks:
      - attestationnetwork
    volumes:
      - ./a10.conf:/etc/a10.conf      # !!!
    labels:
      - traefik.enable=true
      - traefik.port=8520
      - traefik.docker.network=attestationnetwork

#
# FC10 - the REST API to the attestation engine
#       
   fc10:
    image: "fc10"
    container_name: fc10    
    ports:
      - 8542:8542                                # !!!
    depends_on:
      - a10rest  
    restart: always
    networks:
      - attestationnetwork


#
# This defines the permanent volume for storing the database
# so that it is permanent between starting and stopping the whole system
#

volumes:
  attestationdata: 
    external: true

#
# Internal network
#

networks:
   attestationnetwork:
     driver: bridge
